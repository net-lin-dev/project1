name: workflow-cicd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: production


jobs:
  build:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set current timestamp
        run: echo "NOW=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          java-package: 'jdk'
          architecture: 'x64'
          distribution: 'temurin'
          cache: 'maven'
      - name: Helm tool installer
        uses: Azure/setup-helm@v1
      - name: Compile
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.PKG_TOKEN }}
        run: mvn --no-transfer-progress compile
      - name: Package
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.PKG_TOKEN }}
        run: mvn --no-transfer-progress package
      - name: Login GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PKG_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.NOW }}
      - name: Configure AWS credentials                          
        uses: aws-actions/configure-aws-credentials@v1           
        with:                                                    
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}        
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deoloy to aws eks                                                                           
        run: helm install app app/ || helm upgrade  app app/
